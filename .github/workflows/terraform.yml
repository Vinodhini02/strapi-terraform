name: CD - Deploy Strapi with Terraform

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Terraform 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.9

      # 3. Debug Terraform installation
      - name: Debug Terraform installation
        run: |
          echo "PATH: $PATH"
          echo "which terraform (should print a path)"
          which terraform || true
          echo "terraform version (should print v1.6.9)"
          terraform version || true

      # 4. Quick repo listing to debug path issues
      - name: List repository files (debug)
        run: |
          echo "PWD: $(pwd)"
          ls -la
          echo "Recursive listing (top level):"
          ls -R | sed -n '1,200p'

      # 5. Ensure terraform directory exists and show contents
      - name: Check terraform directory
        run: |
          if [ -d "./terraform" ]; then
            echo "Found ./terraform, listing contents:"
            ls -la ./terraform || true
          else
            echo "::error::terraform directory not found at ./terraform"
            echo "Current directory listing:"
            ls -la
            exit 1
          fi

      # 6. Set IMAGE_TAG variable
      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=${GITHUB_SHA::8}" >> $GITHUB_ENV

      # 7. Configure AWS credentials (from GitHub Secrets)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 8. Terraform init
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init -input=false

      # 9. Terraform Plan
      - name: Terraform Plan
        working-directory: ./terraform
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo "Running terraform plan using IMAGE_TAG=${IMAGE_TAG}"
          terraform plan -input=false \
            -var="aws_region=${{ secrets.AWS_REGION }}" \
            -var="ecr_registry=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com" \
            -var="ecr_repository=${{ secrets.ECR_REPOSITORY }}" \
            -var="image_tag=${IMAGE_TAG}" \
            -var="key_name=${{ secrets.EC2_KEY_NAME }}"

      # 10. Terraform Apply
      - name: Terraform Apply
        working-directory: ./terraform
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo "Applying terraform with image_tag=${IMAGE_TAG}"
          terraform apply -auto-approve -input=false \
            -var="aws_region=${{ secrets.AWS_REGION }}" \
            -var="ecr_registry=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com" \
            -var="ecr_repository=${{ secrets.ECR_REPOSITORY }}" \
            -var="image_tag=${IMAGE_TAG}" \
            -var="key_name=${{ secrets.EC2_KEY_NAME }}"
